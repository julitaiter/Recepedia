// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recepdia.Context;

#nullable disable

namespace Recepedia.Migrations
{
    [DbContext(typeof(RecepediaContext))]
    partial class RecepediaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Recepedia.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Nom_Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Recepedia.Models.Dificultad", b =>
                {
                    b.Property<int>("IDDificultad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDDificultad"));

                    b.Property<string>("NombreDificultad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDDificultad");

                    b.ToTable("Dificultad");
                });

            modelBuilder.Entity("Recepedia.Models.Ingrediente", b =>
                {
                    b.Property<int>("IDIngrediente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDIngrediente"));

                    b.Property<string>("Cantidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreIngrediente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecetaIDReceta")
                        .HasColumnType("int");

                    b.HasKey("IDIngrediente");

                    b.HasIndex("RecetaIDReceta");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("Recepedia.Models.Receta", b =>
                {
                    b.Property<int>("IDReceta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDReceta"));

                    b.Property<int>("Autor")
                        .HasColumnType("int");

                    b.Property<int>("Cant_Likes")
                        .HasColumnType("int");

                    b.Property<float>("CantidadPlatos")
                        .HasColumnType("real");

                    b.Property<int>("CategoriaIdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("DificultadIDDificultad")
                        .HasColumnType("int");

                    b.Property<string>("NombreFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreReceta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preparacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TiempoPreparacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioIDUsuario")
                        .HasColumnType("int");

                    b.HasKey("IDReceta");

                    b.HasIndex("CategoriaIdCategoria");

                    b.HasIndex("DificultadIDDificultad");

                    b.HasIndex("UsuarioIDUsuario");

                    b.ToTable("Receta");
                });

            modelBuilder.Entity("Recepedia.Models.Usuario", b =>
                {
                    b.Property<int>("IDUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDUsuario"));

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepetirContraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Recepedia.Models.Ingrediente", b =>
                {
                    b.HasOne("Recepedia.Models.Receta", null)
                        .WithMany("Ingredientes")
                        .HasForeignKey("RecetaIDReceta");
                });

            modelBuilder.Entity("Recepedia.Models.Receta", b =>
                {
                    b.HasOne("Recepedia.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaIdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recepedia.Models.Dificultad", "Dificultad")
                        .WithMany()
                        .HasForeignKey("DificultadIDDificultad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recepedia.Models.Usuario", null)
                        .WithMany("_Favoritos")
                        .HasForeignKey("UsuarioIDUsuario");

                    b.Navigation("Categoria");

                    b.Navigation("Dificultad");
                });

            modelBuilder.Entity("Recepedia.Models.Receta", b =>
                {
                    b.Navigation("Ingredientes");
                });

            modelBuilder.Entity("Recepedia.Models.Usuario", b =>
                {
                    b.Navigation("_Favoritos");
                });
#pragma warning restore 612, 618
        }
    }
}
